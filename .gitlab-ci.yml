before_script:
  - npm -v
  - node -v

stages:
- test
- build
- deploystg
- approval
- deployprd

test:node10:
  stage: test
  image: node:10-alpine
  script:
    - npm install
    - npm run build:prod
    - node -v
    - npm -v


test:node8:
  stage: test
  image: node:8-alpine
  script:
    - npm install
    - npm run build:prod
    - node -v
    - npm -v

test:node6:
  stage: test
  image: node:6-alpine
  script:
    - npm install
    - npm run build:prod
    - node -v
    - npm -v

build:
  stage: build
  image: node:8-alpine
  artifacts:
    paths:
    - build/redux-event-bus-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA.tar.gz
    expire_in: 1 week
  script:
    - npm install
    - npm run tsc
    - rm -r node_modules
    - npm install --production
    - node -v
    - npm -v
    - mkdir -p build
    - tar -zcf build/redux-event-bus-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA.tar.gz lib package.json package-lock.json LICENSE README.md .npmignore
  only:
    - /^release-\d{1,3}[.]\d{1,3}.*$/

# deploy:stage:
#   stage: deploy
#   image: node:8-alpine
#   variables:
#     GIT_STRATEGY: none
#   script:
#     - ls -la
#     - tar -zxvf build/redux-event-bus-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA.tar.gz
#     - rm -r build
#     - 'npm version $(cat package.json | sed -n ''/"version": "*/ { s///; s/".*//; p; q; }'')-prerelease'
#     - 'npm --userconfig npmrc publish -f'
#   only:
#     - /^release-\d{1,3}[.]\d{1,3}.*$/
#   except:
#     - tags

# deploy:prod:
#   stage: deploy
#   image: node:8-alpine
#   variables:
#     GIT_STRATEGY: none
#   script:
#     - ls -la
#     - tar -zxvf build/redux-event-bus-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA.tar.gz
#     - rm -r build
#     - 'npm publish -f'
#   only:
#     - web
#     - /^release-\d{1,3}[.]\d{1,3}.*$/